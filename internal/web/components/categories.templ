package components

import "inventory-api/internal/web/types"

script toggleCategory(nodeID string) {
	// Toggle the expanded state on the button
	this.classList.toggle('expanded');
	
	// Find the arrow SVG and rotate it
	const arrow = this.querySelector('.expand-arrow');
	if (arrow) {
		arrow.classList.toggle('rotate-90');
	}
	
	// Toggle the children container visibility
	const childrenContainer = document.getElementById('children-' + nodeID);
	if (childrenContainer) {
		childrenContainer.classList.toggle('hidden');
	}
}

// CategoriesPage renders the main categories management page
templ CategoriesPage() {
	<div class="space-y-6">
		<!-- Header -->
		<div class="flex justify-between items-center">
			<div>
				<h1 class="text-2xl font-semibold text-gray-900">Category Management</h1>
				<p class="mt-2 text-sm text-gray-700">Organize your products into hierarchical categories.</p>
			</div>
			<button
				class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
				hx-get="/web/categories/create"
				hx-target="#modal-content"
				hx-trigger="click"
				onclick="document.getElementById('category-modal').classList.remove('hidden')"
			>
				<svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
				</svg>
				Add Category
			</button>
		</div>

		<!-- Category Tree -->
		<div class="bg-white shadow rounded-lg">
			<div class="px-4 py-5 sm:p-6">
				<h3 class="text-lg font-medium text-gray-900 mb-4">Category Hierarchy</h3>
				<div class="relative">
					<div 
						id="category-tree"
						hx-get="/web/categories/tree"
						hx-trigger="load, categoryCreated from:body, categoryUpdated from:body, categoryDeleted from:body"
						hx-indicator="#tree-loading"
					>
						<!-- Initial content will be replaced -->
					</div>
					<div id="tree-loading" class="htmx-indicator absolute inset-0 flex items-center justify-center bg-white bg-opacity-75">
						<div class="flex items-center space-x-2">
							<div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
							<span class="text-gray-600">Loading categories...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Modal -->
	<div id="category-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
		<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
			<div class="flex items-center justify-between mb-4">
				<h3 class="text-lg font-medium text-gray-900">Category</h3>
				<button 
					type="button" 
					class="text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100"
					onclick="document.getElementById('category-modal').classList.add('hidden')"
				>
					<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>
			<div id="modal-content">
				<!-- Form content loaded here -->
			</div>
		</div>
	</div>
}

// CategoryTreeNodes renders tree nodes recursively
templ CategoryTreeNodes(nodes []types.CategoryTreeNode) {
	<div class="space-y-1">
		for _, node := range nodes {
			@CategoryTreeNode(node)
		}
	</div>
}

// CategoryTreeNode renders a single tree node
templ CategoryTreeNode(node types.CategoryTreeNode) {
	<div class="category-node" data-level={ templ.EscapeString(string(rune(node.Level + '0'))) }>
		<div class="flex items-center space-x-2 p-2 hover:bg-gray-50 rounded">
			<!-- Expand/Collapse Button -->
			if node.HasChildren {
				<button 
					class="text-gray-400 hover:text-gray-600 expand-btn w-6 h-6 flex items-center justify-center relative z-10 cursor-pointer rounded hover:bg-gray-200"
					hx-get={ "/web/categories/" + node.ID + "/children" }
					hx-target={ "#children-" + node.ID }
					hx-swap="innerHTML"
					hx-indicator={ "#loading-" + node.ID }
					onclick={ toggleCategory(node.ID) }
					type="button"
				>
					<svg class="w-4 h-4 transform transition-transform expand-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
					</svg>
					<div id={ "loading-" + node.ID } class="htmx-indicator absolute inset-0 flex items-center justify-center bg-white rounded">
						<div class="animate-spin rounded-full h-3 w-3 border border-blue-400 border-t-transparent"></div>
					</div>
				</button>
			} else {
				<div class="w-6"></div>
			}

			<!-- Category Icon -->
			<div class="flex-shrink-0">
				<svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2h2l2 2h7a2 2 0 012 2v1"></path>
				</svg>
			</div>

			<!-- Category Info -->
			<div class="flex-1 min-w-0">
				<div class="flex items-center justify-between">
					<div>
						<p class="text-sm font-medium text-gray-900 truncate">{ node.Name }</p>
						if node.Description != "" {
							<p class="text-xs text-gray-500 truncate">{ node.Description }</p>
						}
					</div>
					<div class="flex items-center space-x-2">
						if node.ChildrenCount > 0 {
							<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
								{ templ.EscapeString(string(rune(node.ChildrenCount + '0'))) } items
							</span>
						}
						<!-- Actions -->
						<div class="flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity">
							<button
								class="text-gray-400 hover:text-blue-600 p-1"
								hx-get={ "/web/categories/create?parent_id=" + node.ID }
								hx-target="#modal-content"
								onclick="document.getElementById('category-modal').classList.remove('hidden')"
								title="Add Subcategory"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
								</svg>
							</button>
							<button
								class="text-gray-400 hover:text-green-600 p-1"
								hx-get={ "/web/categories/" + node.ID + "/edit" }
								hx-target="#modal-content"
								onclick="document.getElementById('category-modal').classList.remove('hidden')"
								title="Edit Category"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
								</svg>
							</button>
							<button
								class="text-gray-400 hover:text-red-600 p-1"
								hx-delete={ "/web/categories/" + node.ID }
								hx-confirm="Are you sure you want to delete this category? This action cannot be undone."
								title="Delete Category"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
								</svg>
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Children Container -->
		if node.HasChildren {
			<div id={ "children-" + node.ID } class="ml-6 children-container hidden">
				<!-- Children loaded dynamically -->
			</div>
		}
	</div>
}

// CreateCategoryForm renders the create category form
templ CreateCategoryForm(parentID, parentName string) {
	<div id="category-form" class="p-1">
		<div class="mb-6">
			<h3 class="text-xl font-semibold text-gray-900">
				if parentID != "" {
					Add Subcategory to "{ parentName }"
				} else {
					Add New Category
				}
			</h3>
			<p class="mt-1 text-sm text-gray-600">Create a new category to organize your products.</p>
		</div>
		
		<form
			hx-post="/web/categories"
			hx-target="#category-form"
			hx-indicator="#form-loading"
			class="space-y-6"
		>
			<div class="grid grid-cols-1 gap-6">
				<!-- Category Name -->
				<div>
					<label for="name" class="block text-sm font-medium text-gray-700 mb-2">
						Category Name <span class="text-red-500">*</span>
					</label>
					<input
						type="text"
						id="name"
						name="name"
						required
						class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
						placeholder="Enter category name"
					/>
				</div>

				<!-- Parent Category -->
				<div>
					<label for="parent_id" class="block text-sm font-medium text-gray-700 mb-2">
						Parent Category
					</label>
					<div 
						id="parent-category-selector"
						hx-get="/web/categories/selector"
						hx-trigger="load"
						hx-indicator="#parent-loading"
					>
						if parentID != "" {
							<input type="hidden" name="parent_id" value={ parentID }/>
							<div class="px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-sm text-gray-700">
								{ parentName }
							</div>
							<p class="mt-1 text-xs text-gray-500">Selected as parent category</p>
						} else {
							<select
								id="parent_id"
								name="parent_id"
								class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
							>
								<option value="">No Parent (Root Category)</option>
							</select>
							<div id="parent-loading" class="htmx-indicator mt-1">
								<div class="flex items-center space-x-2 text-sm text-gray-500">
									<div class="animate-spin rounded-full h-4 w-4 border border-gray-300 border-t-blue-500"></div>
									<span>Loading categories...</span>
								</div>
							</div>
						}
					</div>
				</div>

				<!-- Description -->
				<div>
					<label for="description" class="block text-sm font-medium text-gray-700 mb-2">
						Description
					</label>
					<textarea
						id="description"
						name="description"
						rows="3"
						class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
						placeholder="Enter category description (optional)"
					></textarea>
				</div>
			</div>

			<!-- Action Buttons -->
			<div class="flex justify-end space-x-3 pt-4 border-t border-gray-200">
				<button
					type="button"
					class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
					onclick="document.getElementById('category-modal').classList.add('hidden')"
				>
					Cancel
				</button>
				<button
					type="submit"
					class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
				>
					<span id="form-loading" class="htmx-indicator mr-2">
						<svg class="animate-spin h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
						</svg>
					</span>
					Create Category
				</button>
			</div>
		</form>
	</div>
}

// EditCategoryForm renders the edit category form
templ EditCategoryForm(categoryID, name, description string) {
	<div id="category-form">
		<h3 class="text-lg font-medium text-gray-900 mb-4">Edit Category</h3>
		<form
			hx-put={ "/web/categories/" + categoryID }
			hx-target="#category-form"
			hx-indicator="#form-loading"
		>
			<div class="space-y-4">
				<div>
					<label for="name" class="block text-sm font-medium text-gray-700">Category Name</label>
					<input
						type="text"
						id="name"
						name="name"
						required
						value={ name }
						class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
						placeholder="Enter category name"
					/>
				</div>

				<div>
					<label for="description" class="block text-sm font-medium text-gray-700">Description</label>
					<textarea
						id="description"
						name="description"
						rows="3"
						class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
						placeholder="Enter category description (optional)"
					>{ description }</textarea>
				</div>
			</div>

			<div class="flex justify-end space-x-3 mt-6">
				<button
					type="button"
					class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
					onclick="document.getElementById('category-modal').classList.add('hidden')"
				>
					Cancel
				</button>
				<button
					type="submit"
					class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
				>
					<span id="form-loading" class="htmx-indicator">
						<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
						</svg>
					</span>
					Update Category
				</button>
			</div>
		</form>
	</div>
}