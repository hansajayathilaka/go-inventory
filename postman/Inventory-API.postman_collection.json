{
	"info": {
		"_postman_id": "inventory-api-collection",
		"name": "Inventory Management API",
		"description": "Comprehensive collection for testing the Inventory Management REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "category_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "supplier_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "location_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üè• Health & Status",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('auth_token', response.token);",
									"    pm.collectionVariables.set('user_id', response.user.id);",
									"    console.log('Auth token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('auth_token', response.token);",
									"    console.log('Manager auth token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"manager\",\n    \"password\": \"manager123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë• User Management",
			"item": [
				{
					"name": "List Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('new_user_id', response.id);",
									"    console.log('New user created:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"staff\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"updated@example.com\",\n    \"role\": \"manager\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{new_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{new_user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìÅ Categories",
			"item": [
				{
					"name": "List Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('category_id', response.id);",
									"    console.log('New category created:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Category\",\n    \"description\": \"A category for testing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Category Hierarchy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/hierarchy",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"hierarchy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Root Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/roots",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"roots"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Category\",\n    \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/categories/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì¶ Products",
			"item": [
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('product_id', response.id);",
									"    console.log('New product created:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sku\": \"TEST-001\",\n    \"name\": \"Test Product\",\n    \"description\": \"A test product\",\n    \"category_id\": \"{{category_id}}\",\n    \"cost_price\": 10.50,\n    \"retail_price\": 19.99,\n    \"wholesale_price\": 15.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/search?q=test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{product_id}}/inventory",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{product_id}}",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Product\",\n    \"retail_price\": 24.99\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä Inventory",
			"item": [
				{
					"name": "List Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/inventory",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Inventory Record",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": \"{{product_id}}\",\n    \"location_id\": \"{{location_id}}\",\n    \"quantity\": 100,\n    \"reorder_level\": 20,\n    \"max_level\": 500\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/inventory",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adjust Stock",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": \"{{product_id}}\",\n    \"location_id\": \"{{location_id}}\",\n    \"adjustment_type\": \"IN\",\n    \"quantity\": 50,\n    \"reason\": \"Stock replenishment\",\n    \"reference\": \"PO-001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/inventory/adjust",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"adjust"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer Stock",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": \"{{product_id}}\",\n    \"from_location_id\": \"{{location_id}}\",\n    \"to_location_id\": \"{{location_id}}\",\n    \"quantity\": 10,\n    \"reason\": \"Stock transfer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/inventory/transfer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Low Stock Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/inventory/low-stock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"low-stock"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zero Stock Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/inventory/zero-stock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"zero-stock"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Reorder Levels",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"updates\": [\n        {\n            \"product_id\": \"{{product_id}}\",\n            \"location_id\": \"{{location_id}}\",\n            \"reorder_level\": 25,\n            \"max_level\": 1000\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/inventory/reorder-levels",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"reorder-levels"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè¢ Suppliers",
			"item": [
				{
					"name": "List Suppliers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/suppliers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('supplier_id', response.id);",
									"    console.log('New supplier created:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Supplier\",\n    \"code\": \"SUP-TEST\",\n    \"contact_person\": \"John Doe\",\n    \"email\": \"test@supplier.com\",\n    \"phone\": \"+1-555-0123\",\n    \"address\": \"123 Supplier St\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/suppliers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Supplier by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/suppliers/{{supplier_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"suppliers",
								"{{supplier_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Supplier",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Supplier\",\n    \"phone\": \"+1-555-9999\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/suppliers/{{supplier_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"suppliers",
								"{{supplier_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Supplier",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/suppliers/{{supplier_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"suppliers",
								"{{supplier_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìç Locations",
			"item": [
				{
					"name": "List Locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('location_id', response.id);",
									"    console.log('New location created:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Warehouse\",\n    \"code\": \"WH-TEST\",\n    \"address\": \"456 Warehouse Ave\",\n    \"description\": \"Test warehouse location\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Location by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/locations/{{location_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Location Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/locations/{{location_id}}/inventory",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations",
								"{{location_id}}",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Location",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Warehouse\",\n    \"address\": \"789 Updated Ave\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/locations/{{location_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Location",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/locations/{{location_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìã Audit & Reporting",
			"item": [
				{
					"name": "List Audit Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/audit-logs?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"audit-logs"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Audit Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/audit-logs/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"audit-logs",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stock Movements Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/stock-movements?start_date=2024-01-01&end_date=2024-12-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"stock-movements"
							],
							"query": [
								{
									"key": "start_date",
									"value": "2024-01-01"
								},
								{
									"key": "end_date",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Inventory Summary Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/inventory-summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"inventory-summary"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìö Documentation",
			"item": [
				{
					"name": "Swagger Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/docs/index.html",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"docs",
								"index.html"
							]
						}
					},
					"response": []
				},
				{
					"name": "OpenAPI Spec (JSON)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/docs/swagger.json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"docs",
								"swagger.json"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}